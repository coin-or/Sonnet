// Copyright (C) Jan-Willem Goossens 
// This code is licensed under the terms of the Eclipse Public License (EPL).

using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace SonnetTest
{
    [TestClass]
    public class Sonnet_ExampleTests
    {
        [TestMethod, TestCategory("Example")]
        public void SonnetExampleTest1()
        {
            double objValue;
            string solutionString;
            var ex = new SonnetExamples.Example1();
            ex.Run(out objValue, out solutionString);
            Assert.IsTrue(Utils.CompareDouble(objValue, 3288.2370400000018) == 0);

            int index = solutionString.IndexOf("Model 'Investement_Planning'");
            Assert.IsTrue(index >= 0);
            solutionString = solutionString.Remove(0, index);

            index = solutionString.IndexOf("Constraints:");
            Assert.IsTrue(index > 0);
            solutionString = solutionString.Remove(index);

            // the first expected solution occurs in .NET Core.
            string expectedSolutionString1 = "Model 'Investement_Planning'\r\nModel status: Optimal\r\nObjective: 3288.2370400000177\r\nVariables:\r\ncase_year6 : Continuous : [0, Inf] = 3288.2370400000177   ( 0 )\r\ncase_year1 : Continuous : [0, Inf] = 264.0000000001211   ( 0 )\r\nfraction_proj1 : Continuous : [0, Inf] = 1   ( 0 )\r\nfraction_proj2 : Continuous : [0, Inf] = 0   ( 0 )\r\nfraction_proj3 : Continuous : [0, Inf] = 0   ( 0 )\r\nfraction_proj4 : Continuous : [0, Inf] = 0.999999999999   ( 0 )\r\ncase_year2 : Continuous : [0, Inf] = 774.4000000001994   ( 0 )\r\nfraction_proj5 : Continuous : [0, Inf] = 1   ( 0 )\r\ncase_year3 : Continuous : [0, Inf] = 939.8400000001425   ( 0 )\r\ncase_year4 : Continuous : [0, Inf] = 1374.824000000014   ( 0 )\r\ncase_year5 : Continuous : [0, Inf] = 2359.3064000000154   ( 0 )\r\ninvest_proj1 : Integer : [0, 1] = 1   ( 0 )\r\ninvest_proj2 : Integer : [0, 1] = 0   ( 0 )\r\ninvest_proj3 : Integer : [0, 1] = 0   ( 0 )\r\ninvest_proj4 : Integer : [0, 1] = 1   ( 0 )\r\ninvest_proj5 : Integer : [0, 1] = 1   ( 0 )\r\n";
            string expectedSolutionString2 = "Model 'Investement_Planning'\r\nModel status: Optimal\r\nObjective: 3288.23704000002\r\nVariables:\r\ncase_year6 : Continuous : [0, Inf] = 3288.23704000002   ( 0 )\r\ncase_year1 : Continuous : [0, Inf] = 264.000000000121   ( 0 )\r\nfraction_proj1 : Continuous : [0, Inf] = 1   ( 0 )\r\nfraction_proj2 : Continuous : [0, Inf] = 0   ( 0 )\r\nfraction_proj3 : Continuous : [0, Inf] = 0   ( 0 )\r\nfraction_proj4 : Continuous : [0, Inf] = 0.999999999999   ( 0 )\r\ncase_year2 : Continuous : [0, Inf] = 774.400000000199   ( 0 )\r\nfraction_proj5 : Continuous : [0, Inf] = 1   ( 0 )\r\ncase_year3 : Continuous : [0, Inf] = 939.840000000142   ( 0 )\r\ncase_year4 : Continuous : [0, Inf] = 1374.82400000001   ( 0 )\r\ncase_year5 : Continuous : [0, Inf] = 2359.30640000002   ( 0 )\r\ninvest_proj1 : Integer : [0, 1] = 1   ( 0 )\r\ninvest_proj2 : Integer : [0, 1] = 0   ( 0 )\r\ninvest_proj3 : Integer : [0, 1] = 0   ( 0 )\r\ninvest_proj4 : Integer : [0, 1] = 1   ( 0 )\r\ninvest_proj5 : Integer : [0, 1] = 1   ( 0 )\r\n";
            string expectedSolutionString3 = "Model 'Investement_Planning'\r\nModel status: Optimal\r\nObjective: 3288.237040000001\r\nVariables:\r\ncase_year6 : Continuous : [0, Inf] = 3288.237040000001   ( 0 )\r\ncase_year1 : Continuous : [0, Inf] = 264.00000000000006   ( 0 )\r\nfraction_proj1 : Continuous : [0, Inf] = 1   ( 0 )\r\nfraction_proj2 : Continuous : [0, Inf] = 0   ( 0 )\r\nfraction_proj3 : Continuous : [0, Inf] = 0   ( 0 )\r\nfraction_proj4 : Continuous : [0, Inf] = 1   ( 0 )\r\ncase_year2 : Continuous : [0, Inf] = 774.4000000000002   ( 0 )\r\nfraction_proj5 : Continuous : [0, Inf] = 1   ( 0 )\r\ncase_year3 : Continuous : [0, Inf] = 939.8400000000005   ( 0 )\r\ncase_year4 : Continuous : [0, Inf] = 1374.8240000000008   ( 0 )\r\ncase_year5 : Continuous : [0, Inf] = 2359.306400000001   ( 0 )\r\ninvest_proj1 : Integer : [0, 1] = 1   ( 0 )\r\ninvest_proj2 : Integer : [0, 1] = 0   ( 0 )\r\ninvest_proj3 : Integer : [0, 1] = 0   ( 0 )\r\ninvest_proj4 : Integer : [0, 1] = 1   ( 0 )\r\ninvest_proj5 : Integer : [0, 1] = 1   ( 0 )\r\n";

            Assert.IsTrue(Utils.EqualsString(solutionString, expectedSolutionString1) || Utils.EqualsString(solutionString, expectedSolutionString2) || Utils.EqualsString(solutionString, expectedSolutionString3));
        }

        [TestMethod, TestCategory("Example")]
        public void SonnetExampleTest2()
        {
            double objValue;
            string solutionString;
            var ex = new SonnetExamples.Example2();
            ex.Run(out objValue, out solutionString);
            Assert.IsTrue(Utils.CompareDouble(objValue, 22) == 0);

            int index = solutionString.IndexOf("Model 'Personel_Planning'");
            Assert.IsTrue(index >= 0);
            solutionString = solutionString.Remove(0, index);

            // Remove the Constraints from the solution string, because some constraints use the default name with
            // global number of constraints, which changes depending on the order of the tests.
            index = solutionString.IndexOf("Constraints:");
            Assert.IsTrue(index > 0);
            solutionString = solutionString.Remove(index);

            string expectedSolutionString = "Model 'Personel_Planning'\r\nModel status: Optimal\r\nObjective: 22\r\nVariables:\r\ntotemp : Continuous : [0, Inf] = 22   ( 0 )\r\nemp_sun : Integer : [0, 140] = 0   ( 0 )\r\nemp_mon : Integer : [0, 140] = 8   ( 0 )\r\nemp_tue : Integer : [0, 140] = 2   ( 0 )\r\nemp_wed : Integer : [0, 140] = 2   ( 0 )\r\nemp_thu : Integer : [0, 140] = 4   ( 0 )\r\nemp_fri : Integer : [0, 140] = 3   ( 0 )\r\nemp_sat : Integer : [0, 140] = 3   ( 0 )\r\n";
            Assert.IsTrue(Utils.EqualsString(solutionString, expectedSolutionString));
        }

        [TestMethod, TestCategory("Example")]
        public void SonnetExampleTest3()
        {
            double objValue;
            string solutionString;
            var ex = new SonnetExamples.Example3();
            ex.Run(out objValue, out solutionString);
            Assert.IsTrue(Utils.CompareDouble(objValue, 107842.59259259258) == 0);

            // Remove the solver name and model name since these use the default names with global numbers
            int index = solutionString.IndexOf("Model status: Optimal");
            Assert.IsTrue(index >= 0);
            solutionString = solutionString.Remove(0, index);

            // Disable solution string comparison until formatting is implemented, to prevent failed test due to precision
            // the first expected solution occurs in .NET Core.
            //string expectedSolutionString1 = "Model status: Optimal\r\nObjective: 107842.59259259258\r\nVariables:\r\nProduce_Jan : Continuous : [0, 450] = 450   ( 64.99999999999996 )\r\nBuy_Veg1_Jan : Continuous : [0, 1200] = 0   ( -30 )\r\nStore_Veg1_Jan : Continuous : [0, 1000] = 340.7407407407409   ( 0 )\r\nBuy_Veg2_Jan : Continuous : [0, 1200] = 0   ( -39.999999999999986 )\r\nStore_Veg2_Jan : Continuous : [0, 1000] = 459.2592592592591   ( 0 )\r\nBuy_Oil1_Jan : Continuous : [0, 1250] = 0   ( -39.81481481481485 )\r\nStore_Oil1_Jan : Continuous : [0, 1000] = 499.99999999999994   ( 0 )\r\nBuy_Oil2_Jan : Continuous : [0, 1250] = 0   ( -25 )\r\nStore_Oil2_Jan : Continuous : [0, 1000] = 250.00000000000009   ( 0 )\r\nBuy_Oil3_Jan : Continuous : [0, 1250] = 0   ( -29.999999999999943 )\r\nStore_Oil3_Jan : Continuous : [0, 1000] = 500.00000000000006   ( 0 )\r\nProduce_Feb : Continuous : [0, 450] = 450   ( 59.99999999999997 )\r\nBuy_Veg1_Feb : Continuous : [0, 1200] = 0   ( -45 )\r\nStore_Veg1_Feb : Continuous : [0, 1000] = 181.4814814814817   ( 0 )\r\nBuy_Veg2_Feb : Continuous : [0, 1200] = 0   ( -44.999999999999986 )\r\nStore_Veg2_Feb : Continuous : [0, 1000] = 418.51851851851825   ( 0 )\r\nBuy_Oil1_Feb : Continuous : [0, 1250] = 0   ( -14.814814814814852 )\r\nStore_Oil1_Feb : Continuous : [0, 1000] = 499.99999999999994   ( 1.4210854715202004E-14 )\r\nBuy_Oil2_Feb : Continuous : [0, 1250] = 749.9999999999998   ( 0 )\r\nStore_Oil2_Feb : Continuous : [0, 1000] = 750   ( 0 )\r\nBuy_Oil3_Feb : Continuous : [0, 1250] = 0   ( -24.999999999999943 )\r\nStore_Oil3_Feb : Continuous : [0, 1000] = 500.00000000000006   ( 0 )\r\nProduce_Mar : Continuous : [0, 450] = 450   ( 55 )\r\nBuy_Veg1_Mar : Continuous : [0, 1200] = 0   ( -20 )\r\nStore_Veg1_Mar : Continuous : [0, 1000] = 22.222222222222527   ( 0 )\r\nBuy_Veg2_Mar : Continuous : [0, 1200] = 0   ( -49.999999999999986 )\r\nStore_Veg2_Mar : Continuous : [0, 1000] = 377.77777777777743   ( 0 )\r\nBuy_Oil1_Mar : Continuous : [0, 1250] = 0   ( -29.814814814814838 )\r\nStore_Oil1_Mar : Continuous : [0, 1000] = 499.99999999999994   ( 0 )\r\nBuy_Oil2_Mar : Continuous : [0, 1250] = 0   ( -5 )\r\nStore_Oil2_Mar : Continuous : [0, 1000] = 500.00000000000006   ( -1.4210854715202004E-14 )\r\nBuy_Oil3_Mar : Continuous : [0, 1250] = 0   ( 5.684341886080802E-14 )\r\nStore_Oil3_Mar : Continuous : [0, 1000] = 500.00000000000006   ( 0 )\r\nProduce_Apr : Continuous : [0, 450] = 450   ( 50.000000000000014 )\r\nBuy_Veg1_Apr : Continuous : [0, 1200] = 0   ( -25 )\r\nStore_Veg1_Apr : Continuous : [0, 1000] = 0   ( 0 )\r\nBuy_Veg2_Apr : Continuous : [0, 1200] = 0   ( -14.999999999999986 )\r\nStore_Veg2_Apr : Continuous : [0, 1000] = 200   ( 0 )\r\nBuy_Oil1_Apr : Continuous : [0, 1250] = 0   ( -14.814814814814838 )\r\nStore_Oil1_Apr : Continuous : [0, 1000] = 499.99999999999994   ( 0 )\r\nBuy_Oil2_Apr : Continuous : [0, 1250] = 0   ( -20.000000000000014 )\r\nStore_Oil2_Apr : Continuous : [0, 1000] = 250   ( 0 )\r\nBuy_Oil3_Apr : Continuous : [0, 1250] = 0   ( -24.999999999999943 )\r\nStore_Oil3_Apr : Continuous : [0, 1000] = 500.00000000000006   ( 1.4210854715202004E-14 )\r\nProduce_May : Continuous : [0, 450] = 450   ( 45.000000000000014 )\r\nBuy_Veg1_May : Continuous : [0, 1200] = 0   ( 0 )\r\nStore_Veg1_May : Continuous : [0, 1000] = 0   ( -15 )\r\nBuy_Veg2_May : Continuous : [0, 1200] = 0   ( -19.999999999999986 )\r\nStore_Veg2_May : Continuous : [0, 1000] = 0   ( -5.000000000000014 )\r\nBuy_Oil1_May : Continuous : [0, 1250] = 0   ( -39.81481481481484 )\r\nStore_Oil1_May : Continuous : [0, 1000] = 499.99999999999994   ( 0 )\r\nBuy_Oil2_May : Continuous : [0, 1250] = 0   ( -5.000000000000014 )\r\nStore_Oil2_May : Continuous : [0, 1000] = 0   ( -29.99999999999997 )\r\nBuy_Oil3_May : Continuous : [0, 1250] = 0   ( 7.105427357601002E-14 )\r\nStore_Oil3_May : Continuous : [0, 1000] = 500.00000000000006   ( 0 )\r\nProduce_Jun : Continuous : [0, 450] = 450   ( 49.62962962962965 )\r\nBuy_Veg1_Jun : Continuous : [0, 1200] = 659.2592592592591   ( 0 )\r\nStore_Veg1_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Veg2_Jun : Continuous : [0, 1200] = 540.7407407407409   ( 0 )\r\nStore_Veg2_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil1_Jun : Continuous : [0, 1250] = 0   ( -24.814814814814838 )\r\nStore_Oil1_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil2_Jun : Continuous : [0, 1250] = 750   ( 1.4210854715202004E-14 )\r\nStore_Oil2_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil3_Jun : Continuous : [0, 1250] = 0   ( -24.99999999999993 )\r\nStore_Oil3_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nUse_Veg1_Jan : Continuous : [0, 200] = 159.25925925925915   ( 7.105427357601002E-14 )\r\nUse_Veg2_Jan : Continuous : [0, 200] = 40.74074074074086   ( 5.684341886080802E-14 )\r\nUse_Veg1_Feb : Continuous : [0, 200] = 159.25925925925915   ( 4.263256414560601E-14 )\r\nUse_Veg2_Feb : Continuous : [0, 200] = 40.74074074074086   ( 2.842170943040401E-14 )\r\nUse_Veg1_Mar : Continuous : [0, 200] = 159.25925925925915   ( 0 )\r\nUse_Veg2_Mar : Continuous : [0, 200] = 40.74074074074086   ( -1.4210854715202004E-14 )\r\nUse_Veg1_Apr : Continuous : [0, 200] = 22.2222222222226   ( 1.4210854715202004E-14 )\r\nUse_Veg2_Apr : Continuous : [0, 200] = 177.7777777777774   ( 0 )\r\nUse_Veg1_May : Continuous : [0, 200] = 0   ( 1.4210854715202004E-14 )\r\nUse_Veg2_May : Continuous : [0, 200] = 200   ( 0 )\r\nUse_Veg1_Jun : Continuous : [0, 200] = 159.2592592592591   ( 0 )\r\nUse_Veg2_Jun : Continuous : [0, 200] = 40.74074074074091   ( 0 )\r\nUse_Oil1_Jan : Continuous : [0, 250] = 0   ( -5.185185185185105 )\r\nUse_Oil2_Jan : Continuous : [0, 250] = 249.9999999999999   ( 4.263256414560601E-14 )\r\nUse_Oil3_Jan : Continuous : [0, 250] = 0   ( -1.4210854715202004E-14 )\r\nUse_Oil1_Feb : Continuous : [0, 250] = 0   ( -5.185185185185119 )\r\nUse_Oil2_Feb : Continuous : [0, 250] = 249.9999999999999   ( 2.842170943040401E-14 )\r\nUse_Oil3_Feb : Continuous : [0, 250] = 0   ( -2.842170943040401E-14 )\r\nUse_Oil1_Mar : Continuous : [0, 250] = 0   ( -5.185185185185162 )\r\nUse_Oil2_Mar : Continuous : [0, 250] = 249.9999999999999   ( 0 )\r\nUse_Oil3_Mar : Continuous : [0, 250] = 0   ( -5.684341886080802E-14 )\r\nUse_Oil1_Apr : Continuous : [0, 250] = 0   ( -5.185185185185176 )\r\nUse_Oil2_Apr : Continuous : [0, 250] = 250.00000000000003   ( 0 )\r\nUse_Oil3_Apr : Continuous : [0, 250] = 0   ( -7.105427357601002E-14 )\r\nUse_Oil1_May : Continuous : [0, 250] = 0   ( -5.185185185185176 )\r\nUse_Oil2_May : Continuous : [0, 250] = 250   ( 0 )\r\nUse_Oil3_May : Continuous : [0, 250] = 0   ( -8.526512829121202E-14 )\r\nUse_Oil1_Jun : Continuous : [0, 250] = 0   ( 1.4210854715202004E-14 )\r\nUse_Oil2_Jun : Continuous : [0, 250] = 250   ( 27.037037037037024 )\r\nUse_Oil3_Jun : Continuous : [0, 250] = 0   ( -5.925925925925995 )\r\nConstraints:\r\nLimitVegCt_Jan : 200 <= 200  ( 4.999999999999965 )\r\nLimitOilCt_Jan : 200 <= 200  ( -0 )\r\nLimitVegCt_Feb : 200 <= 200  ( 4.999999999999984 )\r\nLimitOilCt_Feb : 200 <= 200  ( -0 )\r\nLimitVegCt_Mar : 200 <= 200  ( -0 )\r\nLimitOilCt_Mar : 200 <= 200  ( 5.000000000000003 )\r\nLimitVegCt_Apr : 200 <= 200  ( 4.999999999999974 )\r\nLimitOilCt_Apr : 200 <= 200  ( -0 )\r\nLimitVegCt_May : 200 <= 200  ( 4.999999999999974 )\r\nLimitOilCt_May : 200 <= 200  ( -0 )\r\nLimitVegCt_Jun : 200 <= 200  ( -0 )\r\nLimitOilCt_Jun : 200 <= 200  ( -0 )\r\nMaxHardnessCt_Jan : -6.821210263296962E-13 <= 0  ( -0 )\r\nMinHardnessCt_Jan : 1349.9999999999995 >= 0  ( -0 )\r\nMaxHardnessCt_Feb : -6.821210263296962E-13 <= 0  ( -0 )\r\nMinHardnessCt_Feb : 1349.9999999999995 >= 0  ( -0 )\r\nMaxHardnessCt_Mar : -6.821210263296962E-13 <= 0  ( -0 )\r\nMinHardnessCt_Mar : 1349.9999999999995 >= 0  ( -0 )\r\nMaxHardnessCt_Apr : -369.99999999999886 <= 0  ( -0 )\r\nMinHardnessCt_Apr : 980.0000000000011 >= 0  ( -0 )\r\nMaxHardnessCt_May : -430 <= 0  ( -0 )\r\nMinHardnessCt_May : 920 >= 0  ( -0 )\r\nMaxHardnessCt_Jun : -2.2737367544323206E-13 <= 0  ( 3.7037037037037024 )\r\nMinHardnessCt_Jun : 1349.9999999999998 >= 0  ( -0 )\r\nProductionBalanceCt_Jan : -1.1368683772161603E-13 == 0  ( -85.00000000000004 )\r\nProductionBalanceCt_Feb : -1.1368683772161603E-13 == 0  ( -90.00000000000003 )\r\nProductionBalanceCt_Mar : -1.1368683772161603E-13 == 0  ( -95 )\r\nProductionBalanceCt_Apr : 5.684341886080802E-14 == 0  ( -99.99999999999999 )\r\nProductionBalanceCt_May : 0 == 0  ( -104.99999999999999 )\r\nProductionBalanceCt_Jun : 2.842170943040401E-14 == 0  ( -122.59259259259258 )\r\nInventoryBalanceCt_Veg1_Feb : 2.842170943040401E-14 == 0  ( -85 )\r\nInventoryBalanceCt_Veg1_Mar : 1.4210854715202004E-14 == 0  ( -90 )\r\nInventoryBalanceCt_Veg1_Apr : -7.460698725481052E-14 == 0  ( -95 )\r\nInventoryBalanceCt_Veg1_May : 0 == 0  ( -100 )\r\nInventoryBalanceCt_Veg1_Jun : 0 == 0  ( -90 )\r\nInitialInventoryBalanceCt_Veg1_Jan : -500 == -500  ( -80 )\r\nFinalInventoryBalanceCt_Veg1 : 500 == 500  ( -95 )\r\nInventoryBalanceCt_Veg2_Feb : 0 == 0  ( -85.00000000000001 )\r\nInventoryBalanceCt_Veg2_Mar : -5.684341886080802E-14 == 0  ( -90.00000000000001 )\r\nInventoryBalanceCt_Veg2_Apr : 2.842170943040401E-14 == 0  ( -95.00000000000001 )\r\nInventoryBalanceCt_Veg2_May : 0 == 0  ( -100.00000000000001 )\r\nInventoryBalanceCt_Veg2_Jun : -5.684341886080802E-14 == 0  ( -100 )\r\nInitialInventoryBalanceCt_Veg2_Jan : -500 == -500  ( -80.00000000000001 )\r\nFinalInventoryBalanceCt_Veg2 : 500 == 500  ( -105 )\r\nInventoryBalanceCt_Oil1_Feb : 0 == 0  ( -95.18518518518515 )\r\nInventoryBalanceCt_Oil1_Mar : 0 == 0  ( -100.18518518518516 )\r\nInventoryBalanceCt_Oil1_Apr : 0 == 0  ( -105.18518518518516 )\r\nInventoryBalanceCt_Oil1_May : 0 == 0  ( -110.18518518518516 )\r\nInventoryBalanceCt_Oil1_Jun : -5.684341886080802E-14 == 0  ( -115.18518518518516 )\r\nInitialInventoryBalanceCt_Oil1_Jan : -499.99999999999994 == -500  ( -90.18518518518515 )\r\nFinalInventoryBalanceCt_Oil1 : 500 == 500  ( -120.18518518518516 )\r\nInventoryBalanceCt_Oil2_Feb : 0 == 0  ( -90 )\r\nInventoryBalanceCt_Oil2_Mar : 5.684341886080802E-14 == 0  ( -95 )\r\nInventoryBalanceCt_Oil2_Apr : 2.842170943040401E-14 == 0  ( -99.99999999999999 )\r\nInventoryBalanceCt_Oil2_May : 0 == 0  ( -104.99999999999999 )\r\nInventoryBalanceCt_Oil2_Jun : 0 == 0  ( -80.00000000000001 )\r\nInitialInventoryBalanceCt_Oil2_Jan : -500 == -500  ( -85 )\r\nFinalInventoryBalanceCt_Oil2 : 500 == 500  ( -85.00000000000001 )\r\nInventoryBalanceCt_Oil3_Feb : 0 == 0  ( -90.00000000000006 )\r\nInventoryBalanceCt_Oil3_Mar : 0 == 0  ( -95.00000000000006 )\r\nInventoryBalanceCt_Oil3_Apr : 0 == 0  ( -100.00000000000006 )\r\nInventoryBalanceCt_Oil3_May : 0 == 0  ( -105.00000000000007 )\r\nInventoryBalanceCt_Oil3_Jun : 5.684341886080802E-14 == 0  ( -110.00000000000007 )\r\nInitialInventoryBalanceCt_Oil3_Jan : -500.00000000000006 == -500  ( -85.00000000000006 )\r\nFinalInventoryBalanceCt_Oil3 : 500 == 500  ( -115.00000000000007 )\r\nEnd\r\n";
            //string expectedSolutionString2 = "Model status: Optimal\r\nObjective: 107842.592592593\r\nVariables:\r\nProduce_Jan : Continuous : [0, 450] = 450   ( 65 )\r\nBuy_Veg1_Jan : Continuous : [0, 1200] = 0   ( -30 )\r\nStore_Veg1_Jan : Continuous : [0, 1000] = 340.740740740741   ( 0 )\r\nBuy_Veg2_Jan : Continuous : [0, 1200] = 0   ( -40 )\r\nStore_Veg2_Jan : Continuous : [0, 1000] = 459.259259259259   ( 0 )\r\nBuy_Oil1_Jan : Continuous : [0, 1250] = 0   ( -39.8148148148149 )\r\nStore_Oil1_Jan : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil2_Jan : Continuous : [0, 1250] = 0   ( -25 )\r\nStore_Oil2_Jan : Continuous : [0, 1000] = 250   ( 0 )\r\nBuy_Oil3_Jan : Continuous : [0, 1250] = 0   ( -29.9999999999999 )\r\nStore_Oil3_Jan : Continuous : [0, 1000] = 500   ( 0 )\r\nProduce_Feb : Continuous : [0, 450] = 450   ( 60 )\r\nBuy_Veg1_Feb : Continuous : [0, 1200] = 0   ( -45 )\r\nStore_Veg1_Feb : Continuous : [0, 1000] = 181.481481481482   ( 0 )\r\nBuy_Veg2_Feb : Continuous : [0, 1200] = 0   ( -45 )\r\nStore_Veg2_Feb : Continuous : [0, 1000] = 418.518518518518   ( 0 )\r\nBuy_Oil1_Feb : Continuous : [0, 1250] = 0   ( -14.8148148148149 )\r\nStore_Oil1_Feb : Continuous : [0, 1000] = 500   ( 1.4210854715202E-14 )\r\nBuy_Oil2_Feb : Continuous : [0, 1250] = 750   ( 0 )\r\nStore_Oil2_Feb : Continuous : [0, 1000] = 750   ( 0 )\r\nBuy_Oil3_Feb : Continuous : [0, 1250] = 0   ( -24.9999999999999 )\r\nStore_Oil3_Feb : Continuous : [0, 1000] = 500   ( 0 )\r\nProduce_Mar : Continuous : [0, 450] = 450   ( 55 )\r\nBuy_Veg1_Mar : Continuous : [0, 1200] = 0   ( -20 )\r\nStore_Veg1_Mar : Continuous : [0, 1000] = 22.2222222222225   ( 0 )\r\nBuy_Veg2_Mar : Continuous : [0, 1200] = 0   ( -50 )\r\nStore_Veg2_Mar : Continuous : [0, 1000] = 377.777777777777   ( 0 )\r\nBuy_Oil1_Mar : Continuous : [0, 1250] = 0   ( -29.8148148148148 )\r\nStore_Oil1_Mar : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil2_Mar : Continuous : [0, 1250] = 0   ( -5 )\r\nStore_Oil2_Mar : Continuous : [0, 1000] = 500   ( -1.4210854715202E-14 )\r\nBuy_Oil3_Mar : Continuous : [0, 1250] = 0   ( 5.6843418860808E-14 )\r\nStore_Oil3_Mar : Continuous : [0, 1000] = 500   ( 0 )\r\nProduce_Apr : Continuous : [0, 450] = 450   ( 50 )\r\nBuy_Veg1_Apr : Continuous : [0, 1200] = 0   ( -25 )\r\nStore_Veg1_Apr : Continuous : [0, 1000] = 0   ( 0 )\r\nBuy_Veg2_Apr : Continuous : [0, 1200] = 0   ( -15 )\r\nStore_Veg2_Apr : Continuous : [0, 1000] = 200   ( 0 )\r\nBuy_Oil1_Apr : Continuous : [0, 1250] = 0   ( -14.8148148148148 )\r\nStore_Oil1_Apr : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil2_Apr : Continuous : [0, 1250] = 0   ( -20 )\r\nStore_Oil2_Apr : Continuous : [0, 1000] = 250   ( 0 )\r\nBuy_Oil3_Apr : Continuous : [0, 1250] = 0   ( -24.9999999999999 )\r\nStore_Oil3_Apr : Continuous : [0, 1000] = 500   ( 1.4210854715202E-14 )\r\nProduce_May : Continuous : [0, 450] = 450   ( 45 )\r\nBuy_Veg1_May : Continuous : [0, 1200] = 0   ( 0 )\r\nStore_Veg1_May : Continuous : [0, 1000] = 0   ( -15 )\r\nBuy_Veg2_May : Continuous : [0, 1200] = 0   ( -20 )\r\nStore_Veg2_May : Continuous : [0, 1000] = 0   ( -5.00000000000001 )\r\nBuy_Oil1_May : Continuous : [0, 1250] = 0   ( -39.8148148148148 )\r\nStore_Oil1_May : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil2_May : Continuous : [0, 1250] = 0   ( -5.00000000000001 )\r\nStore_Oil2_May : Continuous : [0, 1000] = 0   ( -30 )\r\nBuy_Oil3_May : Continuous : [0, 1250] = 0   ( 7.105427357601E-14 )\r\nStore_Oil3_May : Continuous : [0, 1000] = 500   ( 0 )\r\nProduce_Jun : Continuous : [0, 450] = 450   ( 49.6296296296296 )\r\nBuy_Veg1_Jun : Continuous : [0, 1200] = 659.259259259259   ( 0 )\r\nStore_Veg1_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Veg2_Jun : Continuous : [0, 1200] = 540.740740740741   ( 0 )\r\nStore_Veg2_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil1_Jun : Continuous : [0, 1250] = 0   ( -24.8148148148148 )\r\nStore_Oil1_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil2_Jun : Continuous : [0, 1250] = 750   ( 1.4210854715202E-14 )\r\nStore_Oil2_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nBuy_Oil3_Jun : Continuous : [0, 1250] = 0   ( -24.9999999999999 )\r\nStore_Oil3_Jun : Continuous : [0, 1000] = 500   ( 0 )\r\nUse_Veg1_Jan : Continuous : [0, 200] = 159.259259259259   ( 7.105427357601E-14 )\r\nUse_Veg2_Jan : Continuous : [0, 200] = 40.7407407407409   ( 5.6843418860808E-14 )\r\nUse_Veg1_Feb : Continuous : [0, 200] = 159.259259259259   ( 4.2632564145606E-14 )\r\nUse_Veg2_Feb : Continuous : [0, 200] = 40.7407407407409   ( 2.8421709430404E-14 )\r\nUse_Veg1_Mar : Continuous : [0, 200] = 159.259259259259   ( 0 )\r\nUse_Veg2_Mar : Continuous : [0, 200] = 40.7407407407409   ( -1.4210854715202E-14 )\r\nUse_Veg1_Apr : Continuous : [0, 200] = 22.2222222222226   ( 1.4210854715202E-14 )\r\nUse_Veg2_Apr : Continuous : [0, 200] = 177.777777777777   ( 0 )\r\nUse_Veg1_May : Continuous : [0, 200] = 0   ( 1.4210854715202E-14 )\r\nUse_Veg2_May : Continuous : [0, 200] = 200   ( 0 )\r\nUse_Veg1_Jun : Continuous : [0, 200] = 159.259259259259   ( 0 )\r\nUse_Veg2_Jun : Continuous : [0, 200] = 40.7407407407409   ( 0 )\r\nUse_Oil1_Jan : Continuous : [0, 250] = 0   ( -5.18518518518511 )\r\nUse_Oil2_Jan : Continuous : [0, 250] = 250   ( 4.2632564145606E-14 )\r\nUse_Oil3_Jan : Continuous : [0, 250] = 0   ( -1.4210854715202E-14 )\r\nUse_Oil1_Feb : Continuous : [0, 250] = 0   ( -5.18518518518512 )\r\nUse_Oil2_Feb : Continuous : [0, 250] = 250   ( 2.8421709430404E-14 )\r\nUse_Oil3_Feb : Continuous : [0, 250] = 0   ( -2.8421709430404E-14 )\r\nUse_Oil1_Mar : Continuous : [0, 250] = 0   ( -5.18518518518516 )\r\nUse_Oil2_Mar : Continuous : [0, 250] = 250   ( 0 )\r\nUse_Oil3_Mar : Continuous : [0, 250] = 0   ( -5.6843418860808E-14 )\r\nUse_Oil1_Apr : Continuous : [0, 250] = 0   ( -5.18518518518518 )\r\nUse_Oil2_Apr : Continuous : [0, 250] = 250   ( 0 )\r\nUse_Oil3_Apr : Continuous : [0, 250] = 0   ( -7.105427357601E-14 )\r\nUse_Oil1_May : Continuous : [0, 250] = 0   ( -5.18518518518518 )\r\nUse_Oil2_May : Continuous : [0, 250] = 250   ( 0 )\r\nUse_Oil3_May : Continuous : [0, 250] = 0   ( -8.5265128291212E-14 )\r\nUse_Oil1_Jun : Continuous : [0, 250] = 0   ( 1.4210854715202E-14 )\r\nUse_Oil2_Jun : Continuous : [0, 250] = 250   ( 27.037037037037 )\r\nUse_Oil3_Jun : Continuous : [0, 250] = 0   ( -5.92592592592599 )\r\nConstraints:\r\nLimitVegCt_Jan : 200 <= 200  ( 4.99999999999997 )\r\nLimitOilCt_Jan : 200 <= 200  ( 0 )\r\nLimitVegCt_Feb : 200 <= 200  ( 4.99999999999998 )\r\nLimitOilCt_Feb : 200 <= 200  ( 0 )\r\nLimitVegCt_Mar : 200 <= 200  ( 0 )\r\nLimitOilCt_Mar : 200 <= 200  ( 5 )\r\nLimitVegCt_Apr : 200 <= 200  ( 4.99999999999997 )\r\nLimitOilCt_Apr : 200 <= 200  ( 0 )\r\nLimitVegCt_May : 200 <= 200  ( 4.99999999999997 )\r\nLimitOilCt_May : 200 <= 200  ( 0 )\r\nLimitVegCt_Jun : 200 <= 200  ( 0 )\r\nLimitOilCt_Jun : 200 <= 200  ( 0 )\r\nMaxHardnessCt_Jan : -6.82121026329696E-13 <= 0  ( 0 )\r\nMinHardnessCt_Jan : 1350 >= 0  ( 0 )\r\nMaxHardnessCt_Feb : -6.82121026329696E-13 <= 0  ( 0 )\r\nMinHardnessCt_Feb : 1350 >= 0  ( 0 )\r\nMaxHardnessCt_Mar : -6.82121026329696E-13 <= 0  ( 0 )\r\nMinHardnessCt_Mar : 1350 >= 0  ( 0 )\r\nMaxHardnessCt_Apr : -369.999999999999 <= 0  ( 0 )\r\nMinHardnessCt_Apr : 980.000000000001 >= 0  ( 0 )\r\nMaxHardnessCt_May : -430 <= 0  ( 0 )\r\nMinHardnessCt_May : 920 >= 0  ( 0 )\r\nMaxHardnessCt_Jun : -2.27373675443232E-13 <= 0  ( 3.7037037037037 )\r\nMinHardnessCt_Jun : 1350 >= 0  ( 0 )\r\nProductionBalanceCt_Jan : -1.13686837721616E-13 == 0  ( -85 )\r\nProductionBalanceCt_Feb : -1.13686837721616E-13 == 0  ( -90 )\r\nProductionBalanceCt_Mar : -1.13686837721616E-13 == 0  ( -95 )\r\nProductionBalanceCt_Apr : 5.6843418860808E-14 == 0  ( -100 )\r\nProductionBalanceCt_May : 0 == 0  ( -105 )\r\nProductionBalanceCt_Jun : 2.8421709430404E-14 == 0  ( -122.592592592593 )\r\nInventoryBalanceCt_Veg1_Feb : 2.8421709430404E-14 == 0  ( -85 )\r\nInventoryBalanceCt_Veg1_Mar : 1.4210854715202E-14 == 0  ( -90 )\r\nInventoryBalanceCt_Veg1_Apr : -7.46069872548105E-14 == 0  ( -95 )\r\nInventoryBalanceCt_Veg1_May : 0 == 0  ( -100 )\r\nInventoryBalanceCt_Veg1_Jun : 0 == 0  ( -90 )\r\nInitialInventoryBalanceCt_Veg1_Jan : -500 == -500  ( -80 )\r\nFinalInventoryBalanceCt_Veg1 : 500 == 500  ( -95 )\r\nInventoryBalanceCt_Veg2_Feb : 0 == 0  ( -85 )\r\nInventoryBalanceCt_Veg2_Mar : -5.6843418860808E-14 == 0  ( -90 )\r\nInventoryBalanceCt_Veg2_Apr : 2.8421709430404E-14 == 0  ( -95 )\r\nInventoryBalanceCt_Veg2_May : 0 == 0  ( -100 )\r\nInventoryBalanceCt_Veg2_Jun : -5.6843418860808E-14 == 0  ( -100 )\r\nInitialInventoryBalanceCt_Veg2_Jan : -500 == -500  ( -80 )\r\nFinalInventoryBalanceCt_Veg2 : 500 == 500  ( -105 )\r\nInventoryBalanceCt_Oil1_Feb : 0 == 0  ( -95.1851851851851 )\r\nInventoryBalanceCt_Oil1_Mar : 0 == 0  ( -100.185185185185 )\r\nInventoryBalanceCt_Oil1_Apr : 0 == 0  ( -105.185185185185 )\r\nInventoryBalanceCt_Oil1_May : 0 == 0  ( -110.185185185185 )\r\nInventoryBalanceCt_Oil1_Jun : -5.6843418860808E-14 == 0  ( -115.185185185185 )\r\nInitialInventoryBalanceCt_Oil1_Jan : -500 == -500  ( -90.1851851851851 )\r\nFinalInventoryBalanceCt_Oil1 : 500 == 500  ( -120.185185185185 )\r\nInventoryBalanceCt_Oil2_Feb : 0 == 0  ( -90 )\r\nInventoryBalanceCt_Oil2_Mar : 5.6843418860808E-14 == 0  ( -95 )\r\nInventoryBalanceCt_Oil2_Apr : 2.8421709430404E-14 == 0  ( -100 )\r\nInventoryBalanceCt_Oil2_May : 0 == 0  ( -105 )\r\nInventoryBalanceCt_Oil2_Jun : 0 == 0  ( -80 )\r\nInitialInventoryBalanceCt_Oil2_Jan : -500 == -500  ( -85 )\r\nFinalInventoryBalanceCt_Oil2 : 500 == 500  ( -85 )\r\nInventoryBalanceCt_Oil3_Feb : 0 == 0  ( -90.0000000000001 )\r\nInventoryBalanceCt_Oil3_Mar : 0 == 0  ( -95.0000000000001 )\r\nInventoryBalanceCt_Oil3_Apr : 0 == 0  ( -100 )\r\nInventoryBalanceCt_Oil3_May : 0 == 0  ( -105 )\r\nInventoryBalanceCt_Oil3_Jun : 5.6843418860808E-14 == 0  ( -110 )\r\nInitialInventoryBalanceCt_Oil3_Jan : -500 == -500  ( -85.0000000000001 )\r\nFinalInventoryBalanceCt_Oil3 : 500 == 500  ( -115 )\r\nEnd\r\n";
            //Assert.IsTrue(Utils.EqualsString(solutionString, expectedSolutionString1) || Utils.EqualsString(solutionString, expectedSolutionString2));
        }

        [TestMethod, TestCategory("Example")]
        public void SonnetExampleTest4()
        {
            double objValue;
            string solutionString;
            var ex = new SonnetExamples.Example4.Example4();
            ex.Run(out objValue, out solutionString);
            Assert.IsTrue(Utils.CompareDouble(objValue, 9053.4375) == 0);

            int index = solutionString.IndexOf("Model 'Buy or clean'");
            Assert.IsTrue(index >= 0);
            solutionString = solutionString.Remove(0, index);

            // Disable solution string comparison until formatting is implemented, to prevent failed test due to precision
            //string expectedSolutionString1 = "Model 'Buy or clean'\r\nModel status: Optimal\r\nObjective: 9053.4375\r\nVariables:\r\nBuy[Day1] : Continuous : [0, Inf] = 900   ( 0 )\r\nBuy[Day2] : Continuous : [0, Inf] = 1946.25   ( 0 )\r\nBuy[Day3] : Continuous : [0, Inf] = 0   ( 0 )\r\nBuy[Day4] : Continuous : [0, Inf] = 0   ( 0.9375 )\r\nBuy[Day5] : Continuous : [0, Inf] = 0   ( 1.640625 )\r\nClean[method1]_Day1 : Continuous : [0, Inf] = 0   ( 0.75 )\r\nClean[method1]_Day2 : Continuous : [0, Inf] = 56.25   ( 0 )\r\nClean[method1]_Day3 : Continuous : [0, Inf] = 855   ( 0 )\r\nClean[method1]_Day4 : Continuous : [0, Inf] = 1620   ( 0 )\r\nClean[method1]_Day5 : Continuous : [0, Inf] = 0   ( 0.5 )\r\nClean[method2]_Day1 : Continuous : [0, Inf] = 900   ( 0 )\r\nClean[method2]_Day2 : Continuous : [0, Inf] = 1383.75   ( 0 )\r\nClean[method2]_Day3 : Continuous : [0, Inf] = 405   ( 0 )\r\nClean[method2]_Day4 : Continuous : [0, Inf] = 0   ( 0.265625 )\r\nClean[method2]_Day5 : Continuous : [0, Inf] = 0   ( 0.25 )\r\nClean[method3]_Day1 : Continuous : [0, Inf] = 0   ( 0.4437500000000001 )\r\nClean[method3]_Day2 : Continuous : [0, Inf] = 0   ( 0.3265625000000001 )\r\nClean[method3]_Day3 : Continuous : [0, Inf] = 0   ( 0.5375 )\r\nClean[method3]_Day4 : Continuous : [0, Inf] = 0   ( 0.115625 )\r\nClean[method3]_Day5 : Continuous : [0, Inf] = 0   ( 0.1 )\r\nStock[Day1] : Continuous : [0, Inf] = 0   ( 0 )\r\nStock[Day2] : Continuous : [0, Inf] = 506.25   ( 0 )\r\nStock[Day3] : Continuous : [0, Inf] = 0   ( 0.9375 )\r\nStock[Day4] : Continuous : [0, Inf] = 0   ( 0.703125 )\r\nStock[Day5] : Continuous : [0, Inf] = 0   ( 0.859375 )\r\nConstraints:\r\ncleaning[Day1] : 900 <= 900  ( -1.75 )\r\nmaterialBalance[Day1] : 900 == 900  ( 2.5 )\r\ncleaning[Day2] : 1440 <= 1440  ( -1 )\r\nmaterialBalance[Day2] : 1440 == 1440  ( 2.5 )\r\ncleaning[Day3] : 1260 <= 1260  ( -0.4375 )\r\nmaterialBalance[Day3] : 1260 == 1260  ( 2.5 )\r\ncleaning[Day4] : 1620 <= 1620  ( -0.015625 )\r\nmaterialBalance[Day4] : 1620 == 1620  ( 1.5625 )\r\ncleaning[Day5] : 0 <= 1296  ( 0 )\r\nmaterialBalance[Day5] : 1296 == 1296  ( 0.859375 )\r\nEnd\r\n";
            //string expectedSolutionString2 = "Model 'Buy or clean'\r\nModel status: Optimal\r\nObjective: 9053.4375\r\nVariables:\r\nBuy[Day1] : Continuous : [0, Inf] = 900   ( 0 )\r\nBuy[Day2] : Continuous : [0, Inf] = 1946.25   ( 0 )\r\nBuy[Day3] : Continuous : [0, Inf] = 0   ( 0 )\r\nBuy[Day4] : Continuous : [0, Inf] = 0   ( 0.9375 )\r\nBuy[Day5] : Continuous : [0, Inf] = 0   ( 1.640625 )\r\nClean[method1]_Day1 : Continuous : [0, Inf] = 0   ( 0.75 )\r\nClean[method1]_Day2 : Continuous : [0, Inf] = 56.25   ( 0 )\r\nClean[method1]_Day3 : Continuous : [0, Inf] = 855   ( 0 )\r\nClean[method1]_Day4 : Continuous : [0, Inf] = 1620   ( 0 )\r\nClean[method1]_Day5 : Continuous : [0, Inf] = 0   ( 0.5 )\r\nClean[method2]_Day1 : Continuous : [0, Inf] = 900   ( 0 )\r\nClean[method2]_Day2 : Continuous : [0, Inf] = 1383.75   ( 0 )\r\nClean[method2]_Day3 : Continuous : [0, Inf] = 405   ( 0 )\r\nClean[method2]_Day4 : Continuous : [0, Inf] = 0   ( 0.265625 )\r\nClean[method2]_Day5 : Continuous : [0, Inf] = 0   ( 0.25 )\r\nClean[method3]_Day1 : Continuous : [0, Inf] = 0   ( 0.44375 )\r\nClean[method3]_Day2 : Continuous : [0, Inf] = 0   ( 0.3265625 )\r\nClean[method3]_Day3 : Continuous : [0, Inf] = 0   ( 0.5375 )\r\nClean[method3]_Day4 : Continuous : [0, Inf] = 0   ( 0.115625 )\r\nClean[method3]_Day5 : Continuous : [0, Inf] = 0   ( 0.1 )\r\nStock[Day1] : Continuous : [0, Inf] = 0   ( 0 )\r\nStock[Day2] : Continuous : [0, Inf] = 506.25   ( 0 )\r\nStock[Day3] : Continuous : [0, Inf] = 0   ( 0.9375 )\r\nStock[Day4] : Continuous : [0, Inf] = 0   ( 0.703125 )\r\nStock[Day5] : Continuous : [0, Inf] = 0   ( 0.859375 )\r\nConstraints:\r\ncleaning[Day1] : 900 <= 900  ( -1.75 )\r\nmaterialBalance[Day1] : 900 == 900  ( 2.5 )\r\ncleaning[Day2] : 1440 <= 1440  ( -1 )\r\nmaterialBalance[Day2] : 1440 == 1440  ( 2.5 )\r\ncleaning[Day3] : 1260 <= 1260  ( -0.4375 )\r\nmaterialBalance[Day3] : 1260 == 1260  ( 2.5 )\r\ncleaning[Day4] : 1620 <= 1620  ( -0.015625 )\r\nmaterialBalance[Day4] : 1620 == 1620  ( 1.5625 )\r\ncleaning[Day5] : 0 <= 1296  ( 0 )\r\nmaterialBalance[Day5] : 1296 == 1296  ( 0.859375 )\r\nEnd\r\n";
            //Assert.IsTrue(Utils.EqualsString(solutionString, expectedSolutionString1) || Utils.EqualsString(solutionString, expectedSolutionString2));
        }

        [TestMethod, TestCategory("Example")]
        public void SonnetExampleTest5()
        {
            double objValue;
            string solutionString;
            var ex = new SonnetExamples.Example5.Example5();
            ex.Run(out objValue, out solutionString);
            Assert.IsTrue(Utils.CompareDouble(objValue, 424) == 0);

            string expectedSolutionString = "Solver 'MachineAssignmentMIP'\r\nModel 'MachineAssignment'\r\nModel status: Optimal\r\nObjective: 424\r\nVariables:\r\nAssign[A,senior1] : Integer : [0, Inf] = 3   ( 0 )\r\nAssign[B,senior1] : Integer : [0, Inf] = 2   ( 0 )\r\nAssign[C,senior1] : Integer : [0, Inf] = 0   ( 0 )\r\nAssign[D,senior1] : Integer : [0, Inf] = 0   ( 0 )\r\nAssign[A,senior2] : Integer : [0, Inf] = 1   ( 0 )\r\nAssign[B,senior2] : Integer : [0, Inf] = 2   ( 0 )\r\nAssign[C,senior2] : Integer : [0, Inf] = 1   ( 0 )\r\nAssign[D,senior2] : Integer : [0, Inf] = 2   ( 0 )\r\nAssign[A,senior3] : Integer : [0, Inf] = 0   ( 0 )\r\nAssign[B,senior3] : Integer : [0, Inf] = 0   ( 0 )\r\nAssign[C,senior3] : Integer : [0, Inf] = 2   ( 0 )\r\nAssign[D,senior3] : Integer : [0, Inf] = 1   ( 0 )\r\nConstraints:\r\nAvailability[senior1] : 5 <= 6  ( 0 )\r\nAvailability[senior2] : 6 <= 6  ( 0 )\r\nAvailability[senior3] : 3 <= 6  ( 0 )\r\nRequirements[A] : 950 >= 950  ( 0 )\r\nRequirements[B] : 1240 >= 1200  ( 0 )\r\nRequirements[C] : 1510 >= 1500  ( 0 )\r\nRequirements[D] : 1810 >= 1800  ( 0 )\r\nEnd\r\n";
            Assert.IsTrue(Utils.EqualsString(solutionString, expectedSolutionString));
        }

        [TestMethod, TestCategory("Example")]
        public void SonnetExampleTest6()
        {
            double objValue;
            string solutionString;
            var ex = new SonnetExamples.Example6.Example();
            ex.Run(out objValue, out solutionString);
            Assert.IsTrue(Utils.CompareDouble(objValue, 5) == 0);

            int index = solutionString.IndexOf("Model status: Optimal");
            Assert.IsTrue(index >= 0);
            solutionString = solutionString.Remove(0, index);

            index = solutionString.IndexOf("Constraints:");
            Assert.IsTrue(index > 0);
            solutionString = solutionString.Remove(index);

            string expectedSolution1String = "Model status: Optimal\r\nObjective: 5\r\nVariables:\r\nyh^(one)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(one)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(one)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(one)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(one)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(one)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[2,0] : Integer : [0, 1] = 1   ( 0 )\r\nyv^(one)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(two)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nyh^(two)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(two)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(two)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(two)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(two)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nyv^(ten)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ten)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ten)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ten)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ten)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ten)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ean)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ean)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[0,1] : Integer : [0, 1] = 1   ( 0 )\r\nyh^(ean)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ean)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ean)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ean)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(nbe)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(nbe)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(nbe)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[0,2] : Integer : [0, 1] = 1   ( 0 )\r\nyh^(nbe)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(nbe)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(nbe)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nx^(a)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(w)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(n)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[0,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(o)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(a)[1,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(b)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[1,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(e)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[2,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(t)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[2,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(o)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[2,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(n)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\n";
            string expectedSolution2String = "Model status: Optimal\r\nObjective: 5\r\nVariables:\r\nyh^(one)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(one)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(one)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(one)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[0,2] : Integer : [0, 1] = 1   ( 0 )\r\nyh^(one)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(one)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(one)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nyv^(two)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(two)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(two)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(two)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(two)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(two)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ten)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nyh^(ten)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ten)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ten)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ten)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ten)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ean)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ean)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ean)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ean)[1,0] : Integer : [0, 1] = 1   ( 0 )\r\nyv^(ean)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ean)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(nbe)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(nbe)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(nbe)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(nbe)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(nbe)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[2,0] : Integer : [0, 1] = 1   ( 0 )\r\nyv^(nbe)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nx^(a)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(w)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[0,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(a)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[0,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(t)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[1,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(n)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[1,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(b)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[1,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(o)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[2,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(o)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(e)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[2,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(n)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\n";
            Assert.IsTrue(Utils.EqualsString(solutionString, expectedSolution1String) || Utils.EqualsString(solutionString, expectedSolution2String));
        }

        [TestMethod, TestCategory("Example")]
        public void SonnetExampleTest6b()
        {
            double objValue;
            string solutionString;
            var ex = new SonnetExamples.Example6b.Example();
            ex.Run(out objValue, out solutionString);
            Assert.IsTrue(Utils.CompareDouble(objValue, 5) == 0);

            int index = solutionString.IndexOf("Model status: Optimal");
            Assert.IsTrue(index >= 0);
            solutionString = solutionString.Remove(0, index);

            index = solutionString.IndexOf("Constraints:");
            Assert.IsTrue(index > 0);
            solutionString = solutionString.Remove(index);

            //Note that the order of the variables in the solution is different from Example6, but the solution is identical.
            string expectedSolutionString = "Model status: Optimal\r\nObjective: 5\r\nVariables:\r\nyh^(one)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(one)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(one)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[2,0] : Integer : [0, 1] = 1   ( 0 )\r\nyh^(one)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(one)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(one)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(one)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(one)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(one)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(two)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(two)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(two)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(two)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nyv^(two)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(two)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(two)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(two)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nyh^(ten)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ten)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ten)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ten)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ten)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ten)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ten)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ten)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ean)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ean)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(ean)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(ean)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ean)[0,1] : Integer : [0, 1] = 1   ( 0 )\r\nyv^(ean)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(ean)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(ean)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(nbe)[0,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[0,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(nbe)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nyh^(nbe)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyh^(nbe)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(nbe)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nyv^(nbe)[0,2] : Integer : [0, 1] = 1   ( 0 )\r\nyv^(nbe)[1,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[1,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[1,2] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[2,0] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[2,1] : Integer : [0, 0] = 0   ( 0 )\r\nyv^(nbe)[2,2] : Integer : [0, 0] = 0   ( 0 )\r\nx^(a)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[0,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(w)[0,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(n)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[0,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[0,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(o)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[0,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(a)[1,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(b)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[1,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(e)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[1,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[2,0] : Integer : [0, 1] = 1   ( 0 )\r\nx^(t)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,0] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(n)[2,1] : Integer : [0, 1] = 1   ( 0 )\r\nx^(o)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,1] : Integer : [0, 1] = 0   ( 0 )\r\nx^(a)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(b)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(e)[2,2] : Integer : [0, 1] = 1   ( 0 )\r\nx^(n)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(o)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(t)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\nx^(w)[2,2] : Integer : [0, 1] = 0   ( 0 )\r\n";
            Assert.IsTrue(Utils.EqualsString(solutionString, expectedSolutionString));
        }
    }
}
